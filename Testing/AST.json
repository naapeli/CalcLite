{
  "type": "Program",
  "statements": [
    {
      "FunctionStatement": {
        "type": "FunctionStatement",
        "name": {
          "type": "IdentifierLiteral",
          "value": "fibonacci"
        },
        "return_type": "int",
        "parameters": [
          {
            "type": "FunctionParameter",
            "name": "n",
            "value_type": "int"
          }
        ],
        "body": {
          "type": "BlockStatement",
          "statements": [
            {
              "ExpressionStatement": {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "InfixExpression",
                    "left_node": {
                      "type": "IdentifierLiteral",
                      "value": "n"
                    },
                    "operator": "==",
                    "right_node": {
                      "type": "IntegerLiteral",
                      "value": 0
                    }
                  },
                  "consequence": {
                    "type": "BlockStatement",
                    "statements": [
                      {
                        "ReturnStatement": {
                          "type": "ReturnStatement",
                          "return_value": {
                            "type": "IntegerLiteral",
                            "value": 0
                          }
                        }
                      }
                    ]
                  },
                  "alternative": null
                }
              }
            },
            {
              "ExpressionStatement": {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "IfStatement",
                  "condition": {
                    "type": "InfixExpression",
                    "left_node": {
                      "type": "IdentifierLiteral",
                      "value": "n"
                    },
                    "operator": "==",
                    "right_node": {
                      "type": "IntegerLiteral",
                      "value": 1
                    }
                  },
                  "consequence": {
                    "type": "BlockStatement",
                    "statements": [
                      {
                        "ReturnStatement": {
                          "type": "ReturnStatement",
                          "return_value": {
                            "type": "IntegerLiteral",
                            "value": 1
                          }
                        }
                      }
                    ]
                  },
                  "alternative": null
                }
              }
            },
            {
              "ReturnStatement": {
                "type": "ReturnStatement",
                "return_value": {
                  "type": "InfixExpression",
                  "left_node": {
                    "type": "CallExpression",
                    "name": {
                      "type": "IdentifierLiteral",
                      "value": "fibonacci"
                    },
                    "parameters": [
                      {
                        "type": "InfixExpression",
                        "left_node": {
                          "type": "IdentifierLiteral",
                          "value": "n"
                        },
                        "operator": "-",
                        "right_node": {
                          "type": "IntegerLiteral",
                          "value": 1
                        }
                      }
                    ]
                  },
                  "operator": "+",
                  "right_node": {
                    "type": "CallExpression",
                    "name": {
                      "type": "IdentifierLiteral",
                      "value": "fibonacci"
                    },
                    "parameters": [
                      {
                        "type": "InfixExpression",
                        "left_node": {
                          "type": "IdentifierLiteral",
                          "value": "n"
                        },
                        "operator": "-",
                        "right_node": {
                          "type": "IntegerLiteral",
                          "value": 2
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "VarStatement": {
        "type": "VarStatement",
        "name": {
          "type": "IdentifierLiteral",
          "value": "a"
        },
        "value": {
          "type": "FloatLiteral",
          "value": 3.1415926535
        },
        "value_type": "float"
      }
    },
    {
      "ExpressionStatement": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "CallExpression",
          "name": {
            "type": "IdentifierLiteral",
            "value": "print"
          },
          "parameters": [
            {
              "type": "IdentifierLiteral",
              "value": "a"
            }
          ]
        }
      }
    },
    {
      "ExpressionStatement": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "CallExpression",
          "name": {
            "type": "IdentifierLiteral",
            "value": "print"
          },
          "parameters": [
            {
              "type": "CallExpression",
              "name": {
                "type": "IdentifierLiteral",
                "value": "fibonacci"
              },
              "parameters": [
                {
                  "type": "IntegerLiteral",
                  "value": 20
                }
              ]
            }
          ]
        }
      }
    },
    {
      "WhileStatement": {
        "type": "WhileStatement",
        "condition": {
          "type": "InfixExpression",
          "left_node": {
            "type": "IdentifierLiteral",
            "value": "a"
          },
          "operator": "<",
          "right_node": {
            "type": "IntegerLiteral",
            "value": 6
          }
        },
        "body": {
          "type": "BlockStatement",
          "statements": [
            {
              "AssignStatement": {
                "type": "AssignStatement",
                "identifier": {
                  "type": "IdentifierLiteral",
                  "value": "a"
                },
                "expression": {
                  "type": "InfixExpression",
                  "left_node": {
                    "type": "IdentifierLiteral",
                    "value": "a"
                  },
                  "operator": "+",
                  "right_node": {
                    "type": "IntegerLiteral",
                    "value": 1
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "ExpressionStatement": {
        "type": "ExpressionStatement",
        "expression": {
          "type": "CallExpression",
          "name": {
            "type": "IdentifierLiteral",
            "value": "print"
          },
          "parameters": [
            {
              "type": "IdentifierLiteral",
              "value": "a"
            }
          ]
        }
      }
    }
  ]
}